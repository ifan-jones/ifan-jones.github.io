create table t_at_p122476 (like t_at including defaults including constraints);
insert into t_at_p122476 
  select * from t_at where id_tb = 122476;
delete from t_at where id_tb = 122476;
alter table t_at attach partition t_at_p122476 for values in (122476); 


Insert into t_at_p101495 (id_ds, id_tb, id_at, at_id, at_length, n, i, c) 
  Select 12347611, 101495, i.id_at, i.at_id, at_length, array[c[7]::float8, c[18]::float8, c[19]::float8, c[20]::float8, c[21]::float8, c[22]::float8, c[23]::float8, c[24]::float8, c[25]::float8, c[26]::float8, c[27]::float8, c[8]::float8, c[35]::float8, c[44]::float8, c[46]::float8, c[48]::float8, c[50]::float8, c[52]::float8, c[54]::float8, c[9]::float8, c[10]::float8, c[12]::float8, c[13]::float8, c[14]::float8, c[15]::float8, c[17]::float8], array[c[3]::int, c[47]::int, c[49]::int, c[51]::int, c[53]::int, c[55]::int, c[56]::int, c[4]::int, c[11]::int, c[16]::int, c[29]::int, c[34]::int, c[41]::int, c[42]::int, c[45]::int], array[c[2], c[38], c[39], c[40], c[43], c[5], c[6], c[30], c[31], c[32], c[33], c[36], c[37]]
   from  t inner join t_ai_p12347611 i on (i.at_id = t.c[1]) 
   
   
   CREATE OR REPLACE FUNCTION aim_api._fv_v_api_ds(
	p_hs hstore,
	p_offset integer DEFAULT 0,
	p_limit integer DEFAULT 100,
	p_nocount boolean DEFAULT false,
	p_uri text DEFAULT NULL::text,
	p_rowset text DEFAULT NULL::text)
    RETURNS xml
    LANGUAGE 'sql'
    COST 100
    IMMUTABLE
AS $BODY$
 Select  xmlagg(XMLDATA) from ( Select xmlelement(name "assetType", xmlattributes(T1."_HREF" as "href"), xmlelement(name "type", T1."type"), xmlelement(name "pid", T1."pid"), xmlelement(name "rid", T1."rid"), xmlelement(name "status", T1."status"), xmlelement(name "createdAuditId", T1."createdAuditId"), xmlelement(name "auditId", T1."auditId"), xmlelement(name "name", T1."name"), xmlelement(name "description", T1."description"), xmlelement(name "meta", T1."meta"), case when T1."parentAssetType" is not null then xmlelement(name "parentAssetType", xmlattributes(T1."parentAssetType" as "href")) else xmlelement(name "parentAssetType") end, case when T1."defaultAssetDataSet" is not null then xmlelement(name "defaultAssetDataSet", xmlattributes(T1."defaultAssetDataSet" as "href")) else xmlelement(name "defaultAssetDataSet") end, xmlelement(name "archive", X1_13."baseRecord"), xmlelement(name "assetAttributes", X1_6."assetAttribute"), xmlelement(name "assetDataSets", X1_3."assetDataSet"), xmlelement(name "coefficients", X1_5."coefficient"), xmlelement(name "coordinateDataSets", X1_2."coordinateDataSet"), xmlelement(name "costDataSets", X1_1."costDataSet"), xmlelement(name "costModels", X1_9."costModel"), xmlelement(name "interventions", X1_7."intervention"), xmlelement(name "perspectives", X1_14."perspective"), xmlelement(name "plannedInterventionSets", X1_4."plannedInterventionSet"), xmlelement(name "resourceModels", X1_10."resourceModel"), xmlelement(name "riskModels", X1_8."riskModel"), xmlelement(name "snapshotDataSets", X1_11."snapshotDataSet"), xmlelement(name "snapshots", X1_12."snapshot")) as XMLDATA from v_api_ds T1  left outer join (Select X1_1."_ID_DS", xmlagg(xmlelement(name "costDataSet", xmlattributes(X1_1."_HREF" as "href")) order by "_ORDERBY") "costDataSet" from v_api_mc X1_1 group by X1_1."_ID_DS") X1_1 on (T1."_ID_DS" = X1_1."_ID_DS") left outer join (Select X1_2."_ID_DS", xmlagg(xmlelement(name "coordinateDataSet", xmlattributes(X1_2."_HREF" as "href")) order by "_ORDERBY") "coordinateDataSet" from v_api_cd X1_2 group by X1_2."_ID_DS") X1_2 on (T1."_ID_DS" = X1_2."_ID_DS") left outer join (Select X1_3."_ID_DS", xmlagg(xmlelement(name "assetDataSet", xmlattributes(X1_3."_HREF" as "href")) order by "_ORDERBY") "assetDataSet" from v_api_tb X1_3 group by X1_3."_ID_DS") X1_3 on (T1."_ID_DS" = X1_3."_ID_DS") left outer join (Select X1_4."_ID_DS", xmlagg(xmlelement(name "plannedInterventionSet", xmlattributes(X1_4."_HREF" as "href")) order by "_ORDERBY") "plannedInterventionSet" from v_api_fw X1_4 group by X1_4."_ID_DS") X1_4 on (T1."_ID_DS" = X1_4."_ID_DS") left outer join (Select X1_5."_ID_DS", xmlagg(xmlelement(name "coefficient", xmlattributes(X1_5."_HREF" as "href")) order by "_ORDERBY") "coefficient" from v_api_ds_cf X1_5 group by X1_5."_ID_DS") X1_5 on (T1."_ID_DS" = X1_5."_ID_DS") left outer join (Select X1_6."_ID_DS", xmlagg(xmlelement(name "assetAttribute", xmlattributes(X1_6."_HREF" as "href")) order by "_ORDERBY") "assetAttribute" from v_api_aa X1_6 group by X1_6."_ID_DS") X1_6 on (T1."_ID_DS" = X1_6."_ID_DS") left outer join (Select X1_7."_ID_DS", xmlagg(xmlelement(name "intervention", xmlattributes(X1_7."_HREF" as "href")) order by "_ORDERBY") "intervention" from v_api_iv X1_7 group by X1_7."_ID_DS") X1_7 on (T1."_ID_DS" = X1_7."_ID_DS") left outer join (Select X1_8."_ID_DS", xmlagg(xmlelement(name "riskModel", xmlattributes(X1_8."_HREF" as "href")) order by "_ORDERBY") "riskModel" from v_api_mr X1_8 group by X1_8."_ID_DS") X1_8 on (T1."_ID_DS" = X1_8."_ID_DS") left outer join (Select X1_9."_ID_DS", xmlagg(xmlelement(name "costModel", xmlattributes(X1_9."_HREF" as "href")) order by "_ORDERBY") "costModel" from v_api_mf X1_9 group by X1_9."_ID_DS") X1_9 on (T1."_ID_DS" = X1_9."_ID_DS") left outer join (Select X1_10."_ID_DS", xmlagg(xmlelement(name "resourceModel", xmlattributes(X1_10."_HREF" as "href")) order by "_ORDERBY") "resourceModel" from v_api_mp X1_10 group by X1_10."_ID_DS") X1_10 on (T1."_ID_DS" = X1_10."_ID_DS") left outer join (Select X1_11."_ID_DS", xmlagg(xmlelement(name "snapshotDataSet", xmlattributes(X1_11."_HREF" as "href"), case when X1_11."snapshot" is not null then xmlelement(name "snapshot", xmlattributes(X1_11."snapshot" as "href")) else xmlelement(name "snapshot") end, case when X1_11."assetDataSet" is not null then xmlelement(name "assetDataSet", xmlattributes(X1_11."assetDataSet" as "href")) else xmlelement(name "assetDataSet") end) order by "_ORDERBY") "snapshotDataSet" from v_api_ss_tb X1_11 group by X1_11."_ID_DS") X1_11 on (T1."_ID_DS" = X1_11."_ID_DS") left outer join (Select X1_12."_ID_DS", xmlagg(xmlelement(name "snapshot", xmlattributes(X1_12."_HREF" as "href")) order by "_ORDERBY") "snapshot" from v_api_ss X1_12 group by X1_12."_ID_DS") X1_12 on (T1."_ID_DS" = X1_12."_ID_DS") left outer join (Select X1_13."_ID_DS", xmlagg(xmlelement(name "baseRecord", xmlattributes(X1_13."_HREF" as "href")) order by "_ORDERBY") "baseRecord" from v_api_ss_arch X1_13 group by X1_13."_ID_DS") X1_13 on (T1."_ID_DS" = X1_13."_ID_DS") left outer join (Select X1_14."_ID_DS", xmlagg(xmlelement(name "perspective", xmlattributes(X1_14."_HREF" as "href")) order by "_ORDERBY") "perspective" from v_api_ps X1_14 group by X1_14."_ID_DS") X1_14 on (T1."_ID_DS" = X1_14."_ID_DS") where T1."_ID_DS" = coalesce((p_hs->'DS')::int, T1."_ID_DS") order by "_ORDERBY" offset p_offset  limit p_limit ) T1
$BODY$;
drop view aim_api._fv_v_api_ds;
CREATE OR REPLACE FUNCTION aim_api._fv_v_api_ds(
	p_hs hstore,
	p_offset integer DEFAULT 0,
	p_limit integer DEFAULT 100,
	p_nocount boolean DEFAULT false,
	p_uri text DEFAULT NULL::text,
	p_rowset text DEFAULT NULL::text)
    RETURNS xml
    LANGUAGE 'sql'
    COST 100
    immutable parallel safe
AS $BODY$
 Select  xmlagg(XMLDATA) from ( Select xmlelement(name "assetType", xmlattributes(T1."_HREF" as "href"), xmlelement(name "type", T1."type"), xmlelement(name "pid", T1."pid"), xmlelement(name "rid", T1."rid"), xmlelement(name "status", T1."status"), xmlelement(name "createdAuditId", T1."createdAuditId"), xmlelement(name "auditId", T1."auditId"), xmlelement(name "name", T1."name"), xmlelement(name "description", T1."description"), xmlelement(name "meta", T1."meta"), case when T1."parentAssetType" is not null then xmlelement(name "parentAssetType", xmlattributes(T1."parentAssetType" as "href")) else xmlelement(name "parentAssetType") end, case when T1."defaultAssetDataSet" is not null then xmlelement(name "defaultAssetDataSet", xmlattributes(T1."defaultAssetDataSet" as "href")) else xmlelement(name "defaultAssetDataSet") end, xmlelement(name "archive", X1_13."baseRecord"), xmlelement(name "assetAttributes", X1_6."assetAttribute"), xmlelement(name "assetDataSets", X1_3."assetDataSet"), xmlelement(name "coefficients", X1_5."coefficient"), xmlelement(name "coordinateDataSets", X1_2."coordinateDataSet"), xmlelement(name "costDataSets", X1_1."costDataSet"), xmlelement(name "costModels", X1_9."costModel"), xmlelement(name "interventions", X1_7."intervention"), xmlelement(name "perspectives", X1_14."perspective"), xmlelement(name "plannedInterventionSets", X1_4."plannedInterventionSet"), xmlelement(name "resourceModels", X1_10."resourceModel"), xmlelement(name "riskModels", X1_8."riskModel"), xmlelement(name "snapshotDataSets", X1_11."snapshotDataSet"), xmlelement(name "snapshots", X1_12."snapshot")) as XMLDATA from v_api_ds T1  left outer join (Select X1_1."_ID_DS", xmlagg(xmlelement(name "costDataSet", xmlattributes(X1_1."_HREF" as "href")) order by "_ORDERBY") "costDataSet" from v_api_mc X1_1 group by X1_1."_ID_DS") X1_1 on (T1."_ID_DS" = X1_1."_ID_DS") left outer join (Select X1_2."_ID_DS", xmlagg(xmlelement(name "coordinateDataSet", xmlattributes(X1_2."_HREF" as "href")) order by "_ORDERBY") "coordinateDataSet" from v_api_cd X1_2 group by X1_2."_ID_DS") X1_2 on (T1."_ID_DS" = X1_2."_ID_DS") left outer join (Select X1_3."_ID_DS", xmlagg(xmlelement(name "assetDataSet", xmlattributes(X1_3."_HREF" as "href")) order by "_ORDERBY") "assetDataSet" from v_api_tb X1_3 group by X1_3."_ID_DS") X1_3 on (T1."_ID_DS" = X1_3."_ID_DS") left outer join (Select X1_4."_ID_DS", xmlagg(xmlelement(name "plannedInterventionSet", xmlattributes(X1_4."_HREF" as "href")) order by "_ORDERBY") "plannedInterventionSet" from v_api_fw X1_4 group by X1_4."_ID_DS") X1_4 on (T1."_ID_DS" = X1_4."_ID_DS") left outer join (Select X1_5."_ID_DS", xmlagg(xmlelement(name "coefficient", xmlattributes(X1_5."_HREF" as "href")) order by "_ORDERBY") "coefficient" from v_api_ds_cf X1_5 group by X1_5."_ID_DS") X1_5 on (T1."_ID_DS" = X1_5."_ID_DS") left outer join (Select X1_6."_ID_DS", xmlagg(xmlelement(name "assetAttribute", xmlattributes(X1_6."_HREF" as "href")) order by "_ORDERBY") "assetAttribute" from v_api_aa X1_6 group by X1_6."_ID_DS") X1_6 on (T1."_ID_DS" = X1_6."_ID_DS") left outer join (Select X1_7."_ID_DS", xmlagg(xmlelement(name "intervention", xmlattributes(X1_7."_HREF" as "href")) order by "_ORDERBY") "intervention" from v_api_iv X1_7 group by X1_7."_ID_DS") X1_7 on (T1."_ID_DS" = X1_7."_ID_DS") left outer join (Select X1_8."_ID_DS", xmlagg(xmlelement(name "riskModel", xmlattributes(X1_8."_HREF" as "href")) order by "_ORDERBY") "riskModel" from v_api_mr X1_8 group by X1_8."_ID_DS") X1_8 on (T1."_ID_DS" = X1_8."_ID_DS") left outer join (Select X1_9."_ID_DS", xmlagg(xmlelement(name "costModel", xmlattributes(X1_9."_HREF" as "href")) order by "_ORDERBY") "costModel" from v_api_mf X1_9 group by X1_9."_ID_DS") X1_9 on (T1."_ID_DS" = X1_9."_ID_DS") left outer join (Select X1_10."_ID_DS", xmlagg(xmlelement(name "resourceModel", xmlattributes(X1_10."_HREF" as "href")) order by "_ORDERBY") "resourceModel" from v_api_mp X1_10 group by X1_10."_ID_DS") X1_10 on (T1."_ID_DS" = X1_10."_ID_DS") left outer join (Select X1_11."_ID_DS", xmlagg(xmlelement(name "snapshotDataSet", xmlattributes(X1_11."_HREF" as "href"), case when X1_11."snapshot" is not null then xmlelement(name "snapshot", xmlattributes(X1_11."snapshot" as "href")) else xmlelement(name "snapshot") end, case when X1_11."assetDataSet" is not null then xmlelement(name "assetDataSet", xmlattributes(X1_11."assetDataSet" as "href")) else xmlelement(name "assetDataSet") end) order by "_ORDERBY") "snapshotDataSet" from v_api_ss_tb X1_11 group by X1_11."_ID_DS") X1_11 on (T1."_ID_DS" = X1_11."_ID_DS") left outer join (Select X1_12."_ID_DS", xmlagg(xmlelement(name "snapshot", xmlattributes(X1_12."_HREF" as "href")) order by "_ORDERBY") "snapshot" from v_api_ss X1_12 group by X1_12."_ID_DS") X1_12 on (T1."_ID_DS" = X1_12."_ID_DS") left outer join (Select X1_13."_ID_DS", xmlagg(xmlelement(name "baseRecord", xmlattributes(X1_13."_HREF" as "href")) order by "_ORDERBY") "baseRecord" from v_api_ss_arch X1_13 group by X1_13."_ID_DS") X1_13 on (T1."_ID_DS" = X1_13."_ID_DS") left outer join (Select X1_14."_ID_DS", xmlagg(xmlelement(name "perspective", xmlattributes(X1_14."_HREF" as "href")) order by "_ORDERBY") "perspective" from v_api_ps X1_14 group by X1_14."_ID_DS") X1_14 on (T1."_ID_DS" = X1_14."_ID_DS") where T1."_ID_DS" = 108936 order by "_ORDERBY" offset p_offset  limit p_limit ) T1
$BODY$;

CREATE OR REPLACE FUNCTION aim_api._fv_v_api_ds(
	p_hs int,
	p_offset integer DEFAULT 0,
	p_limit integer DEFAULT 100,
	p_nocount boolean DEFAULT false,
	p_uri text DEFAULT NULL::text,
	p_rowset text DEFAULT NULL::text)
    RETURNS xml
    LANGUAGE 'sql'
    COST 100
    stable parallel safe
AS $BODY$
 Select  xmlagg(XMLDATA) from ( Select xmlelement(name "assetType", xmlattributes(T1."_HREF" as "href"), xmlelement(name "type", T1."type"), xmlelement(name "pid", T1."pid"), xmlelement(name "rid", T1."rid"), xmlelement(name "status", T1."status"), xmlelement(name "createdAuditId", T1."createdAuditId"), xmlelement(name "auditId", T1."auditId"), xmlelement(name "name", T1."name"), xmlelement(name "description", T1."description"), xmlelement(name "meta", T1."meta"), case when T1."parentAssetType" is not null then xmlelement(name "parentAssetType", xmlattributes(T1."parentAssetType" as "href")) else xmlelement(name "parentAssetType") end, case when T1."defaultAssetDataSet" is not null then xmlelement(name "defaultAssetDataSet", xmlattributes(T1."defaultAssetDataSet" as "href")) else xmlelement(name "defaultAssetDataSet") end, xmlelement(name "archive", X1_13."baseRecord"), xmlelement(name "assetAttributes", X1_6."assetAttribute"), xmlelement(name "assetDataSets", X1_3."assetDataSet"), xmlelement(name "coefficients", X1_5."coefficient"), xmlelement(name "coordinateDataSets", X1_2."coordinateDataSet"), xmlelement(name "costDataSets", X1_1."costDataSet"), xmlelement(name "costModels", X1_9."costModel"), xmlelement(name "interventions", X1_7."intervention"), xmlelement(name "perspectives", X1_14."perspective"), xmlelement(name "plannedInterventionSets", X1_4."plannedInterventionSet"), xmlelement(name "resourceModels", X1_10."resourceModel"), xmlelement(name "riskModels", X1_8."riskModel"), xmlelement(name "snapshotDataSets", X1_11."snapshotDataSet"), xmlelement(name "snapshots", X1_12."snapshot")) as XMLDATA from v_api_ds T1  left outer join (Select X1_1."_ID_DS", xmlagg(xmlelement(name "costDataSet", xmlattributes(X1_1."_HREF" as "href")) order by "_ORDERBY") "costDataSet" from v_api_mc X1_1 group by X1_1."_ID_DS") X1_1 on (T1."_ID_DS" = X1_1."_ID_DS") left outer join (Select X1_2."_ID_DS", xmlagg(xmlelement(name "coordinateDataSet", xmlattributes(X1_2."_HREF" as "href")) order by "_ORDERBY") "coordinateDataSet" from v_api_cd X1_2 group by X1_2."_ID_DS") X1_2 on (T1."_ID_DS" = X1_2."_ID_DS") left outer join (Select X1_3."_ID_DS", xmlagg(xmlelement(name "assetDataSet", xmlattributes(X1_3."_HREF" as "href")) order by "_ORDERBY") "assetDataSet" from v_api_tb X1_3 group by X1_3."_ID_DS") X1_3 on (T1."_ID_DS" = X1_3."_ID_DS") left outer join (Select X1_4."_ID_DS", xmlagg(xmlelement(name "plannedInterventionSet", xmlattributes(X1_4."_HREF" as "href")) order by "_ORDERBY") "plannedInterventionSet" from v_api_fw X1_4 group by X1_4."_ID_DS") X1_4 on (T1."_ID_DS" = X1_4."_ID_DS") left outer join (Select X1_5."_ID_DS", xmlagg(xmlelement(name "coefficient", xmlattributes(X1_5."_HREF" as "href")) order by "_ORDERBY") "coefficient" from v_api_ds_cf X1_5 group by X1_5."_ID_DS") X1_5 on (T1."_ID_DS" = X1_5."_ID_DS") left outer join (Select X1_6."_ID_DS", xmlagg(xmlelement(name "assetAttribute", xmlattributes(X1_6."_HREF" as "href")) order by "_ORDERBY") "assetAttribute" from v_api_aa X1_6 group by X1_6."_ID_DS") X1_6 on (T1."_ID_DS" = X1_6."_ID_DS") left outer join (Select X1_7."_ID_DS", xmlagg(xmlelement(name "intervention", xmlattributes(X1_7."_HREF" as "href")) order by "_ORDERBY") "intervention" from v_api_iv X1_7 group by X1_7."_ID_DS") X1_7 on (T1."_ID_DS" = X1_7."_ID_DS") left outer join (Select X1_8."_ID_DS", xmlagg(xmlelement(name "riskModel", xmlattributes(X1_8."_HREF" as "href")) order by "_ORDERBY") "riskModel" from v_api_mr X1_8 group by X1_8."_ID_DS") X1_8 on (T1."_ID_DS" = X1_8."_ID_DS") left outer join (Select X1_9."_ID_DS", xmlagg(xmlelement(name "costModel", xmlattributes(X1_9."_HREF" as "href")) order by "_ORDERBY") "costModel" from v_api_mf X1_9 group by X1_9."_ID_DS") X1_9 on (T1."_ID_DS" = X1_9."_ID_DS") left outer join (Select X1_10."_ID_DS", xmlagg(xmlelement(name "resourceModel", xmlattributes(X1_10."_HREF" as "href")) order by "_ORDERBY") "resourceModel" from v_api_mp X1_10 group by X1_10."_ID_DS") X1_10 on (T1."_ID_DS" = X1_10."_ID_DS") left outer join (Select X1_11."_ID_DS", xmlagg(xmlelement(name "snapshotDataSet", xmlattributes(X1_11."_HREF" as "href"), case when X1_11."snapshot" is not null then xmlelement(name "snapshot", xmlattributes(X1_11."snapshot" as "href")) else xmlelement(name "snapshot") end, case when X1_11."assetDataSet" is not null then xmlelement(name "assetDataSet", xmlattributes(X1_11."assetDataSet" as "href")) else xmlelement(name "assetDataSet") end) order by "_ORDERBY") "snapshotDataSet" from v_api_ss_tb X1_11 group by X1_11."_ID_DS") X1_11 on (T1."_ID_DS" = X1_11."_ID_DS") left outer join (Select X1_12."_ID_DS", xmlagg(xmlelement(name "snapshot", xmlattributes(X1_12."_HREF" as "href")) order by "_ORDERBY") "snapshot" from v_api_ss X1_12 group by X1_12."_ID_DS") X1_12 on (T1."_ID_DS" = X1_12."_ID_DS") left outer join (Select X1_13."_ID_DS", xmlagg(xmlelement(name "baseRecord", xmlattributes(X1_13."_HREF" as "href")) order by "_ORDERBY") "baseRecord" from v_api_ss_arch X1_13 group by X1_13."_ID_DS") X1_13 on (T1."_ID_DS" = X1_13."_ID_DS") left outer join (Select X1_14."_ID_DS", xmlagg(xmlelement(name "perspective", xmlattributes(X1_14."_HREF" as "href")) order by "_ORDERBY") "perspective" from v_api_ps X1_14 group by X1_14."_ID_DS") X1_14 on (T1."_ID_DS" = X1_14."_ID_DS") where T1."_ID_DS" = coalesce(p_hs, T1."_ID_DS") order by "_ORDERBY" offset p_offset  limit p_limit ) T1
$BODY$;

select count(1) from v_api_ds;

select ',''GET|'||uri||'''' from t_rc where rc_table = 'AA' and id_pt = 99686;
drop function aim_api._fv_v_api_aa
CREATE OR REPLACE FUNCTION aim_api._fv_v_api_aa(
	p_hs hstore,
	p_offset integer DEFAULT 0,
	p_limit integer DEFAULT 100,
	p_nocount boolean DEFAULT false,
	p_uri text DEFAULT NULL::text,
	p_rowset text DEFAULT NULL::text)
    RETURNS table (l_res  xml)
    LANGUAGE 'plpgsql' IMMUTABLE ROWS 1
AS $BODY$
begin
 Return Query
  Select xmlelement(name "assetAttribute", xmlattributes(T1."_HREF" as "href"), xmlelement(name "type", T1."type"), xmlelement(name "pid", T1."pid"), xmlelement(name "rid", T1."rid"), xmlelement(name "status", T1."status"), xmlelement(name "createdAuditId", T1."createdAuditId"), xmlelement(name "auditId", T1."auditId"), xmlelement(name "name", T1."name"), xmlelement(name "description", T1."description"), xmlelement(name "meta", T1."meta"), xmlelement(name "dataType", T1."dataType")) as XMLDATA from v_api_aa T1  where T1."_ID_DS" = (p_hs->'DS')::int AND T1."_ID_AA" = coalesce((p_hs->'AA')::int, T1."_ID_AA") order by "_ORDERBY" offset p_offset  limit p_limit ;
end;
$BODY$;


CREATE OR REPLACE FUNCTION aim_api._fv_v_api_ds(
	p_hs hstore,
	p_offset integer DEFAULT 0,
	p_limit integer DEFAULT 100,
	p_nocount boolean DEFAULT false,
	p_uri text DEFAULT NULL::text,
	p_rowset text DEFAULT NULL::text)
    RETURNS table (l_res  xml)
    LANGUAGE 'plpgsql' IMMUTABLE ROWS 1
AS $BODY$
begin
 Return Query
 Select  xmlagg(XMLDATA) from ( Select xmlelement(name "assetType", xmlattributes(T1."_HREF" as "href"), xmlelement(name "type", T1."type"), xmlelement(name "pid", T1."pid"), xmlelement(name "rid", T1."rid"), xmlelement(name "status", T1."status"), xmlelement(name "createdAuditId", T1."createdAuditId"), xmlelement(name "auditId", T1."auditId"), xmlelement(name "name", T1."name"), xmlelement(name "description", T1."description"), xmlelement(name "meta", T1."meta"), case when T1."parentAssetType" is not null then xmlelement(name "parentAssetType", xmlattributes(T1."parentAssetType" as "href")) else xmlelement(name "parentAssetType") end, case when T1."defaultAssetDataSet" is not null then xmlelement(name "defaultAssetDataSet", xmlattributes(T1."defaultAssetDataSet" as "href")) else xmlelement(name "defaultAssetDataSet") end, xmlelement(name "archive", X1_13."baseRecord"), xmlelement(name "assetAttributes", X1_6."assetAttribute"), xmlelement(name "assetDataSets", X1_3."assetDataSet"), xmlelement(name "coefficients", X1_5."coefficient"), xmlelement(name "coordinateDataSets", X1_2."coordinateDataSet"), xmlelement(name "costDataSets", X1_1."costDataSet"), xmlelement(name "costModels", X1_9."costModel"), xmlelement(name "interventions", X1_7."intervention"), xmlelement(name "perspectives", X1_14."perspective"), xmlelement(name "plannedInterventionSets", X1_4."plannedInterventionSet"), xmlelement(name "resourceModels", X1_10."resourceModel"), xmlelement(name "riskModels", X1_8."riskModel"), xmlelement(name "snapshotDataSets", X1_11."snapshotDataSet"), xmlelement(name "snapshots", X1_12."snapshot")) as XMLDATA from v_api_ds T1  left outer join (Select X1_1."_ID_DS", xmlagg(xmlelement(name "costDataSet", xmlattributes(X1_1."_HREF" as "href")) order by "_ORDERBY") "costDataSet" from v_api_mc X1_1 group by X1_1."_ID_DS") X1_1 on (T1."_ID_DS" = X1_1."_ID_DS") left outer join (Select X1_2."_ID_DS", xmlagg(xmlelement(name "coordinateDataSet", xmlattributes(X1_2."_HREF" as "href")) order by "_ORDERBY") "coordinateDataSet" from v_api_cd X1_2 group by X1_2."_ID_DS") X1_2 on (T1."_ID_DS" = X1_2."_ID_DS") left outer join (Select X1_3."_ID_DS", xmlagg(xmlelement(name "assetDataSet", xmlattributes(X1_3."_HREF" as "href")) order by "_ORDERBY") "assetDataSet" from v_api_tb X1_3 group by X1_3."_ID_DS") X1_3 on (T1."_ID_DS" = X1_3."_ID_DS") left outer join (Select X1_4."_ID_DS", xmlagg(xmlelement(name "plannedInterventionSet", xmlattributes(X1_4."_HREF" as "href")) order by "_ORDERBY") "plannedInterventionSet" from v_api_fw X1_4 group by X1_4."_ID_DS") X1_4 on (T1."_ID_DS" = X1_4."_ID_DS") left outer join (Select X1_5."_ID_DS", xmlagg(xmlelement(name "coefficient", xmlattributes(X1_5."_HREF" as "href")) order by "_ORDERBY") "coefficient" from v_api_ds_cf X1_5 group by X1_5."_ID_DS") X1_5 on (T1."_ID_DS" = X1_5."_ID_DS") left outer join (Select X1_6."_ID_DS", xmlagg(xmlelement(name "assetAttribute", xmlattributes(X1_6."_HREF" as "href")) order by "_ORDERBY") "assetAttribute" from v_api_aa X1_6 group by X1_6."_ID_DS") X1_6 on (T1."_ID_DS" = X1_6."_ID_DS") left outer join (Select X1_7."_ID_DS", xmlagg(xmlelement(name "intervention", xmlattributes(X1_7."_HREF" as "href")) order by "_ORDERBY") "intervention" from v_api_iv X1_7 group by X1_7."_ID_DS") X1_7 on (T1."_ID_DS" = X1_7."_ID_DS") left outer join (Select X1_8."_ID_DS", xmlagg(xmlelement(name "riskModel", xmlattributes(X1_8."_HREF" as "href")) order by "_ORDERBY") "riskModel" from v_api_mr X1_8 group by X1_8."_ID_DS") X1_8 on (T1."_ID_DS" = X1_8."_ID_DS") left outer join (Select X1_9."_ID_DS", xmlagg(xmlelement(name "costModel", xmlattributes(X1_9."_HREF" as "href")) order by "_ORDERBY") "costModel" from v_api_mf X1_9 group by X1_9."_ID_DS") X1_9 on (T1."_ID_DS" = X1_9."_ID_DS") left outer join (Select X1_10."_ID_DS", xmlagg(xmlelement(name "resourceModel", xmlattributes(X1_10."_HREF" as "href")) order by "_ORDERBY") "resourceModel" from v_api_mp X1_10 group by X1_10."_ID_DS") X1_10 on (T1."_ID_DS" = X1_10."_ID_DS") left outer join (Select X1_11."_ID_DS", xmlagg(xmlelement(name "snapshotDataSet", xmlattributes(X1_11."_HREF" as "href"), case when X1_11."snapshot" is not null then xmlelement(name "snapshot", xmlattributes(X1_11."snapshot" as "href")) else xmlelement(name "snapshot") end, case when X1_11."assetDataSet" is not null then xmlelement(name "assetDataSet", xmlattributes(X1_11."assetDataSet" as "href")) else xmlelement(name "assetDataSet") end) order by "_ORDERBY") "snapshotDataSet" from v_api_ss_tb X1_11 group by X1_11."_ID_DS") X1_11 on (T1."_ID_DS" = X1_11."_ID_DS") left outer join (Select X1_12."_ID_DS", xmlagg(xmlelement(name "snapshot", xmlattributes(X1_12."_HREF" as "href")) order by "_ORDERBY") "snapshot" from v_api_ss X1_12 group by X1_12."_ID_DS") X1_12 on (T1."_ID_DS" = X1_12."_ID_DS") left outer join (Select X1_13."_ID_DS", xmlagg(xmlelement(name "baseRecord", xmlattributes(X1_13."_HREF" as "href")) order by "_ORDERBY") "baseRecord" from v_api_ss_arch X1_13 group by X1_13."_ID_DS") X1_13 on (T1."_ID_DS" = X1_13."_ID_DS") left outer join (Select X1_14."_ID_DS", xmlagg(xmlelement(name "perspective", xmlattributes(X1_14."_HREF" as "href")) order by "_ORDERBY") "perspective" from v_api_ps X1_14 group by X1_14."_ID_DS") X1_14 on (T1."_ID_DS" = X1_14."_ID_DS") where T1."_ID_DS" = coalesce((p_hs->'DS')::int, T1."_ID_DS") order by "_ORDERBY" offset p_offset  limit p_limit ) T1;
end;
$BODY$;
